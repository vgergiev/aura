<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component description="A list wrapper for tabs in a ui:tabset component">
    <aura:attribute name="tabs" type="List" description="List of tab configurations." />
    <aura:attribute name="class" type="String" description="CSS class" />

    <aura:attribute name="useOverflowMenu" type="Boolean" default="false"
                    description="Determines whether the tab bar should use an overflow menu. If true, and the total width of the tab items exceeds the specified bar width, a menu will be shown that includes the tabs that do not fit. Use in conjunction with barWidth and tabItemWidth"/>
    <aura:attribute name="overflowLabel" type="String" default="More" description="Label to use for the overflow menu trigger."/>
    <aura:attribute name="overflowIcon" type="Aura.Component[]"  description="Icon to use for the overflow menu trigger."/>

    <aura:attribute name="overflowData" type="Map" default="{}" access="PRIVATE" description="Internal object used to store overflow information"/>
    <aura:attribute name="tabHeaders" type="Aura.Component[]" access="PRIVATE" />

    <aura:registerevent name="setActive" type="ui:tabsetEvent" description="This event is fired from parent component to activate a tab item."/>
    <aura:registerevent name="addTab" type="ui:tabsetEvent" description="This event is fired from parent component to add a tab item." />
    <aura:registerevent name="closeTab" type="ui:tabsetEvent" description="This event is fired from parent component to close a tab item." />
    <aura:registerevent name="onTabClosed" type="ui:tabsetEvent" description="This event is fired when the close icon is clicked." />
    <aura:registerevent name="onTabActivated" type="ui:tabsetEvent" description="This event is fired when the tab item is clicked." />
    <aura:registerevent name="onTabHover" type="ui:onTabHover" description="The event is fired when the mouse moves over a tab or when a tab is put into focus." />
    <aura:registerevent name="onTabUnhover" type="ui:onTabHover" description="The event is fired when the mouse moves off of a tab or when focus is moved away from a tab." />

    <aura:handler name="setActive" action="{!c.setActive}" />
    <aura:handler name="addTab" action="{!c.addTab}" />
    <aura:handler name="closeTab" action="{!c.closeTab}" />

    <aura:handler name="init" value="{!this}" action="{!c.onInit}" />

    <aura:dependency resource="markup://ui:tabItem" />
    <aura:dependency resource="markup://ui:tabOverflowMenuItem" />

    <aura:if isTrue="{!v.useOverflowMenu}">
        <ui:resizeObserver onresize="{!c.onResize}"/>
    </aura:if>

    <div class="{!v.class}" aura:id="div" role="application tablist">
        <ul class="tabs__nav" aura:id="tabItemsContainer" role="presentation" onkeydown="{!c.onKeyDown}">
            {!v.tabHeaders}
            <aura:if isTrue="{!v.useOverflowMenu}">
                <ui:tabOverflowMenuItem aura:id="overflowMenu" title="{!v.overflowLabel}" icon="{!v.overflowIcon}" onTabSelection="{!c.onOverflowSelection}" />
            </aura:if>
        </ul>
    </div>
</aura:component>

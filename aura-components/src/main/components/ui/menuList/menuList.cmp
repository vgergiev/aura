<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component access="GLOBAL" support="GA" extensible="true" implements="ui:visible" extends="ui:popupTarget"
                dynamicallyFlavorable="true" description="A menu component that can contain menu items:
                ui:actionMenuItem, ui:checkboxMenuItem, and ui:radioMenuItem, and a separator component
                ui:menuItemSeparator. This component can be nested in a ui:menu component and can be used
                together with a ui:menuTriggerLink component, which triggers the menu items.">
    <aura:attribute access="GLOBAL" name="menuItems" type="List" description="A list of menu items set explicitly using instances of the Java class: aura.​components.​ui.MenuItem."/>
    <aura:attribute access="GLOBAL" name="visible" type="Boolean" default="{!false}" description="Controls the visibility of the menu. The default is false, which hides the menu."/>
    <aura:attribute name="focusItemIndex" type="Integer" default="0"
                    description="The index of the item which should be on focus when the menu displays. 0 means the first item and -1 refers to the last."/>
    <aura:attribute name="focusTrigger" type="Aura.Action" description="The action is invoked to set focus to the menu trigger." />
    <aura:attribute name="headerText" type="String" description="If set, shows a non-selectable header text." />

    <aura:attribute name="childMenuItems" type="Aura.Component[]" description="a read-only attribute pointing to child components."/>

    <aura:registerEvent access="GLOBAL" name="menuCollapse" type="ui:collapse" description="The event fired when the menu list collapses."/>
    <aura:registerEvent access="GLOBAL" name="menuExpand" type="ui:expand" description="The event fired when the menu list displays."/>
    <aura:registerEvent access="GLOBAL" name="menuSelect" type="ui:menuSelect" description="The event fired when the user select a menu item."/>
    <aura:registerEvent access="GLOBAL" name="menuFocusChange" type="ui:menuFocusChange" description="The event fired when the menu list focus changed from one menuItem to another menuItem."/>
    <aura:registerEvent name="refresh" type="ui:refresh" description="Fire this event to refresh the menuList."/>

    <aura:handler name="refresh" action="{!c.update}"/>

    <div class="{!v.class}" aura:id="menu" role="menu">
        <aura:if isTrue="{!v.headerText != null}">
            <div class="menu__header">
                <span class="text-heading--label">{!v.headerText}</span>
            </div>
        </aura:if>

        <ul aura:id="datalist" role="presentation">
             <aura:iteration items="{!v.menuItems}" var="item">
                <ui:menuItem aura:id="item" class="{!item.className}" disabled="{!item.disabled}" label="{!item.label}" selected="{!item.selected}" type="{!item.type}" value="{!item.value}"/>
            </aura:iteration>
            {!v.body}
        </ul>
    </div>
</aura:component>
